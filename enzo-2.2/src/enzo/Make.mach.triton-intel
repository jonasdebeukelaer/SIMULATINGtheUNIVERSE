#=======================================================================
#
# FILE:        Make.mach.triton-intel
#
# DESCRIPTION: Makefile settings for the Triton Resource at SDSC/UCSD
#
# AUTHOR:      Stephen Skory (sskory@physics.ucsd.edu)
# MODIFIED:    Matt Turk (matthewturk@gmail.com)
#
# DATE:        27 October 2009
#
#
#=======================================================================

MACH_TEXT  = Triton-intel
MACH_VALID = 1
MACH_FILE  = Make.mach.triton-intel

#-----------------------------------------------------------------------
# Compiler settings
#-----------------------------------------------------------------------

MACH_CPP       = cpp # C preprocessor command
LOCAL_MPI_INSTALL = /opt/mpich/intel/mx/
LOCAL_PYTHON_INSTALL = /projects/lca-group/local-dev/
LOCAL_PYTHON_INSTALL = /home/mjturk/yt-x86_64-libenzo-intel/
LOCAL_COMPILER_DIR = /opt/intel/Compiler/11.1/072/bin/intel64/
LOCAL_HYPRE_INSTALL = /home/mjturk/intel_mx/

# With MPI

MACH_CC_MPI    = $(LOCAL_MPI_INSTALL)/bin/mpicc # C compiler when using MPI
MACH_CXX_MPI   = $(LOCAL_MPI_INSTALL)/bin/mpicxx # C++ compiler when using MPI
MACH_FC_MPI    = $(LOCAL_MPI_INSTALL)/bin/mpif77 # Fortran 77 compiler when using MPI
MACH_F90_MPI   = $(LOCAL_MPI_INSTALL)/bin/mpif90 # Fortran 90 compiler when using MPI
MACH_LD_MPI    = $(LOCAL_MPI_INSTALL)/bin/mpicxx # Linker when using MPI

# Without MPI

MACH_CC_NOMPI  = $(LOCAL_COMPILER_DIR)/icc # C compiler when not using MPI
MACH_CXX_NOMPI = $(LOCAL_COMPILER_DIR)/icpc # C++ compiler when not using MPI
MACH_FC_NOMPI  = $(LOCAL_COMPILER_DIR)/ifort # Fortran 77 compiler when not using MPI
MACH_F90_NOMPI = $(LOCAL_COMPILER_DIR)/ifort # Fortran 90 compiler when not using MPI
MACH_LD_NOMPI  = $(LOCAL_COMPILER_DIR)/icpc # Linker when not using MPI

#-----------------------------------------------------------------------
# Machine-dependent defines
#-----------------------------------------------------------------------

MACH_DEFINES   = -DLINUX -DH5_USE_16_API # Defines for the architecture; e.g. -DSUN, -DLINUX, etc.

#-----------------------------------------------------------------------
# Compiler flag settings
#-----------------------------------------------------------------------


MACH_CPPFLAGS = -P -traditional 
MACH_CFLAGS   = 
MACH_CXXFLAGS =
MACH_FFLAGS   = -fno-second-underscore
MACH_F90FLAGS = -fno-second-underscore
MACH_LDFLAGS  = 

#-----------------------------------------------------------------------
# Optimization flags
#-----------------------------------------------------------------------

MACH_OPT_WARN        = -Wall # Flags for verbose compiler warnings
MACH_OPT_DEBUG       = -O0 -g # Flags for debugging
# Flags for high conservative optimization
MACH_OPT_HIGH        = -O1 -ftz -mieee-fp -fp-speculation=off -prec-sqrt -prec-div
# Note that this breaks determinism, which is why it's commented out!
#MACH_OPT_AGGRESSIVE  = -O3 -fp-model strict -fp-speculation off # Flags for aggressive optimization
# This is the best we can do, from what I can tell.
MACH_OPT_AGGRESSIVE  = -O1 -ftz -mieee-fp -fp-speculation=off -prec-sqrt -prec-div

#-----------------------------------------------------------------------
# Includes
#-----------------------------------------------------------------------

LOCAL_INCLUDES_MPI    = 
LOCAL_INCLUDES_HDF5   = -I/home/mjturk/yt-x86_64-libenzo-intel/include # HDF5 includes
LOCAL_INCLUDES_HYPRE  = -I$(LOCAL_HYPRE_INSTALL)/include
LOCAL_INCLUDES_PAPI   = # PAPI includes
LOCAL_INCLUDES_PYTHON = -I$(LOCAL_PYTHON_INSTALL)/include/python2.6/ \
                        -I$(LOCAL_PYTHON_INSTALL)/lib/python2.6/site-packages/numpy/core/include

MACH_INCLUDES         = $(LOCAL_INCLUDES_HDF5)
MACH_INCLUDES_PYTHON  = $(LOCAL_INCLUDES_PYTHON)
MACH_INCLUDES_MPI     = $(LOCAL_INCLUDES_MPI)
MACH_INCLUDES_HYPRE   = $(LOCAL_INCLUDES_HYPRE)
MACH_INCLUDES_PAPI    = $(LOCAL_INCLUDES_PAPI)

#-----------------------------------------------------------------------
# Libraries
#-----------------------------------------------------------------------

LOCAL_LIBS_MPI    = 
LOCAL_LIBS_HDF5   = -L/home/mjturk/yt-x86_64-libenzo-intel/lib -lhdf5 -lz # HDF5 libraries
LOCAL_LIBS_HYPRE  = $(LOCAL_HYPRE_INSTALL)/lib/libHYPRE.a
LOCAL_LIBS_PAPI   = # PAPI libraries
#LOCAL_LIBS_PYTHON  = $(LOCAL_PYTHON_INSTALL)/lib/python2.6/config/libpython2.6.a \
#                     -lreadline -ltermcap -lutil -lpython2.6 -ldl
LOCAL_LIBS_PYTHON = -L$(LOCAL_PYTHON_INSTALL)/lib/ -lpython2.6 \
                     -lreadline -ltermcap -lutil -ldl

LOCAL_LIBS_MACH   = -limf -lifcore -lifport 

MACH_LIBS         = $(LOCAL_LIBS_HDF5) $(LOCAL_LIBS_MACH)
MACH_LIBS_MPI     = $(LOCAL_LIBS_MPI)
MACH_LIBS_HYPRE   = $(LOCAL_LIBS_HYPRE)
MACH_LIBS_PAPI    = $(LOCAL_LIBS_PAPI)
MACH_LIBS_PYTHON  = $(LOCAL_LIBS_PYTHON)
